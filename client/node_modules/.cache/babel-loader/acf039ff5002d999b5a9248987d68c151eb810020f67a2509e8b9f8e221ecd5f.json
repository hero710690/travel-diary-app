{"ast":null,"code":"import _objectSpread from\"/Users/jeanlee/travel-diary-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{useQuery,useMutation,useQueryClient}from'react-query';import{DndProvider}from'react-dnd';import{HTML5Backend}from'react-dnd-html5-backend';import{addDays,differenceInDays}from'date-fns';import{tripsAPI}from'../services/api';import GoogleMap from'../components/GoogleMap';import PlacesSearch from'../components/PlacesSearch';import DraggablePlace from'../components/DraggablePlace';import ItineraryDay from'../components/ItineraryDay';import LoadingSpinner from'../components/LoadingSpinner';import toast from'react-hot-toast';import{ArrowLeftIcon,MapIcon,CalendarIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TripPlanningPage=()=>{var _tripData$data$trip,_tripData$data$trip2;const{id}=useParams();const navigate=useNavigate();const queryClient=useQueryClient();const[selectedPlaces,setSelectedPlaces]=useState([]);const[mapCenter,setMapCenter]=useState({lat:48.8566,lng:2.3522});// Default to Paris\nconst[itinerary,setItinerary]=useState([]);const[isMapReady,setIsMapReady]=useState(false);// Fetch trip data\nconst{data:tripData,isLoading}=useQuery(['trip',id],()=>tripsAPI.getTripById(id),{enabled:!!id,onSuccess:response=>{const trip=response.data.trip;// Transform backend itinerary to frontend format\nif(trip.itinerary&&trip.itinerary.length>0){const transformedItinerary=trip.itinerary.map((item,index)=>{var _item$place,_item$place2,_item$place3,_item$place4,_item$place5,_item$place6;// Calculate day number from date\nconst tripStartDate=new Date(trip.startDate);const itemDate=new Date(item.date);const dayNumber=Math.floor((itemDate.getTime()-tripStartDate.getTime())/(1000*60*60*24))+1;// Check if this is a flight item\nconst isFlightItem=item.flightInfo||((_item$place=item.place)===null||_item$place===void 0?void 0:_item$place.types)&&item.place.types.includes('flight');return{id:item._id||\"item_\".concat(index),day:Math.max(1,dayNumber),time:item.startTime||'09:00',title:item.customTitle||((_item$place2=item.place)===null||_item$place2===void 0?void 0:_item$place2.name)||'Activity',description:item.customDescription||((_item$place3=item.place)===null||_item$place3===void 0?void 0:_item$place3.address)||'',location:{name:((_item$place4=item.place)===null||_item$place4===void 0?void 0:_item$place4.name)||'',address:((_item$place5=item.place)===null||_item$place5===void 0?void 0:_item$place5.address)||'',coordinates:((_item$place6=item.place)===null||_item$place6===void 0?void 0:_item$place6.coordinates)||undefined},duration:item.estimatedDuration||(isFlightItem?120:60),type:isFlightItem?'flight':'activity',notes:item.notes||'',// Include flight info if available\nflightInfo:item.flightInfo||undefined};});console.log('📥 Loaded and transformed itinerary:',transformedItinerary);setItinerary(transformedItinerary);}else{setItinerary([]);}// Set map center based on destination\nif(trip.destination){console.log('🗺️ Setting map center for destination:',trip.destination);geocodeDestination(trip.destination);}}});// Update itinerary mutation\nconst updateItineraryMutation=useMutation(transformedItinerary=>tripsAPI.updateItinerary(id,transformedItinerary),{onSuccess:()=>{queryClient.invalidateQueries(['trip',id]);toast.success('Itinerary updated successfully!');},onError:error=>{var _error$response,_error$response$data;console.error('❌ Itinerary save error:',error);const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to update itinerary';toast.error(\"Server error while saving itinerary: \".concat(message));}});const geocodeDestination=destination=>{console.log('🔍 Attempting to geocode destination:',destination);const attemptGeocode=()=>{if(window.google&&window.google.maps&&window.google.maps.Geocoder){console.log('✅ Google Maps Geocoder available');const geocoder=new google.maps.Geocoder();geocoder.geocode({address:destination},(results,status)=>{console.log('📍 Geocoding result:',status,results);if(status==='OK'&&results&&results[0]){const location=results[0].geometry.location;const newCenter={lat:location.lat(),lng:location.lng()};console.log('🎯 Setting map center to:',newCenter);setMapCenter(newCenter);setIsMapReady(true);// Also log the formatted address\nconsole.log('📍 Geocoded address:',results[0].formatted_address);}else{console.error('❌ Geocoding failed:',status);// Fallback to default location for the destination\nsetDefaultLocationForDestination(destination);}});}else{console.log('⏳ Google Maps not ready, retrying in 1 second...');setTimeout(attemptGeocode,1000);}};attemptGeocode();};const setDefaultLocationForDestination=destination=>{// Set reasonable defaults for common destinations\nconst dest=destination.toLowerCase();let defaultCenter={lat:48.8566,lng:2.3522};// Paris default\nif(dest.includes('paris')){defaultCenter={lat:48.8566,lng:2.3522};}else if(dest.includes('london')){defaultCenter={lat:51.5074,lng:-0.1278};}else if(dest.includes('new york')||dest.includes('nyc')){defaultCenter={lat:40.7128,lng:-74.0060};}else if(dest.includes('tokyo')){defaultCenter={lat:35.6762,lng:139.6503};}else if(dest.includes('rome')){defaultCenter={lat:41.9028,lng:12.4964};}else if(dest.includes('barcelona')){defaultCenter={lat:41.3851,lng:2.1734};}else if(dest.includes('amsterdam')){defaultCenter={lat:52.3676,lng:4.9041};}else if(dest.includes('berlin')){defaultCenter={lat:52.5200,lng:13.4050};}console.log('🗺️ Using default location for',destination,':',defaultCenter);setMapCenter(defaultCenter);setIsMapReady(true);};const handlePlaceSelect=place=>{var _place$geometry;setSelectedPlaces(prev=>{const exists=prev.find(p=>p.place_id===place.place_id);if(!exists){return[...prev,place];}return prev;});// Update map center to selected place\nif((_place$geometry=place.geometry)!==null&&_place$geometry!==void 0&&_place$geometry.location){setMapCenter({lat:place.geometry.location.lat(),lng:place.geometry.location.lng()});}};const handleMapPlaceSelect=place=>{const newPlace={place_id:place.place_id||\"custom_\".concat(Date.now()),name:place.name||'Selected Location',formatted_address:place.formatted_address||'',geometry:place.geometry};handlePlaceSelect(newPlace);};const generateDays=()=>{if(!(tripData!==null&&tripData!==void 0&&tripData.data.trip))return[];const trip=tripData.data.trip;// Handle different date formats from backend\nlet startDate;let endDate;try{// Frontend uses camelCase, backend uses snake_case\nconst startDateStr=trip.startDate||trip.start_date;const endDateStr=trip.endDate||trip.end_date;startDate=new Date(startDateStr);endDate=new Date(endDateStr);// If invalid dates, try parsing as YYYY-MM-DD\nif(isNaN(startDate.getTime())){startDate=new Date(startDateStr+'T00:00:00');}if(isNaN(endDate.getTime())){endDate=new Date(endDateStr+'T00:00:00');}// Fallback to duration if dates still invalid\nif(isNaN(startDate.getTime())||isNaN(endDate.getTime())){startDate=new Date();endDate=new Date();const duration=trip.duration||7;endDate.setDate(startDate.getDate()+duration-1);}}catch(error){console.error('Date parsing error:',error);// Fallback dates\nstartDate=new Date();endDate=new Date();const duration=trip.duration||7;endDate.setDate(startDate.getDate()+duration-1);}const dayCount=Math.max(1,differenceInDays(endDate,startDate)+1);return Array.from({length:dayCount},(_,index)=>({date:addDays(startDate,index),dayNumber:index+1}));};const handleDropToDay=(place,dayNumber)=>{var _place$geometry2;const newItineraryItem={id:\"\".concat(place.place_id,\"_\").concat(dayNumber,\"_\").concat(Date.now()),day:dayNumber,time:'09:00',title:place.name,description:place.formatted_address,location:{name:place.name,address:place.formatted_address,coordinates:(_place$geometry2=place.geometry)!==null&&_place$geometry2!==void 0&&_place$geometry2.location?{lat:place.geometry.location.lat(),lng:place.geometry.location.lng()}:undefined},duration:60,// Default 1 hour\ntype:'activity'};setItinerary(prev=>[...prev,newItineraryItem]);};const handleRemoveFromItinerary=itemId=>{setItinerary(prev=>prev.filter(item=>item.id!==itemId));};const handleUpdateItineraryItem=(itemId,updates)=>{setItinerary(prev=>prev.map(item=>item.id===itemId?_objectSpread(_objectSpread({},item),updates):item));};const handleMoveItineraryItem=(itemId,newDay)=>{setItinerary(prev=>prev.map(item=>item.id===itemId?_objectSpread(_objectSpread({},item),{},{day:newDay}):item));};const handleAddFlight=(dayNumber,flightInfo,time)=>{const newFlightItem={id:\"flight_\".concat(dayNumber,\"_\").concat(Date.now()),day:dayNumber,time:time,title:\"\".concat(flightInfo.airline,\" \").concat(flightInfo.flightNumber),description:\"\".concat(flightInfo.departure.airportCode,\" \\u2192 \").concat(flightInfo.arrival.airportCode),location:{name:\"\".concat(flightInfo.departure.airport,\" to \").concat(flightInfo.arrival.airport),address:\"\".concat(flightInfo.departure.airportCode,\" \\u2192 \").concat(flightInfo.arrival.airportCode),coordinates:undefined// Flights don't have single coordinates\n},duration:flightInfo.duration?parseInt(flightInfo.duration.replace(/[^\\d]/g,''))*60:120,// Convert to minutes\ntype:'flight',flightInfo:flightInfo,notes:flightInfo.bookingReference?\"Booking: \".concat(flightInfo.bookingReference):''};setItinerary(prev=>[...prev,newFlightItem]);toast.success('Flight added to itinerary!');};const handleSaveItinerary=()=>{// Transform the itinerary to match backend schema\nconst transformedItinerary=itinerary.map((item,index)=>{var _item$location,_item$location2;// Calculate the actual date based on trip start date and day number\nconst tripStartDate=new Date((tripData===null||tripData===void 0?void 0:tripData.data.trip.startDate)||Date.now());const itemDate=new Date(tripStartDate);itemDate.setDate(itemDate.getDate()+(item.day-1));// Handle flight items differently\nif(item.type==='flight'&&item.flightInfo){return{place:{name:item.title,address:item.description||'',coordinates:null,placeId:item.id,types:['flight'],rating:0},date:itemDate.toISOString(),startTime:item.time,endTime:item.time,estimatedDuration:item.duration||120,notes:item.notes||'',order:index,isCustom:true,customTitle:item.title,customDescription:item.description||'',// Store flight info in notes for backend compatibility\nflightInfo:item.flightInfo};}// Handle regular activity items\nreturn{place:{name:item.title,address:item.description||((_item$location=item.location)===null||_item$location===void 0?void 0:_item$location.address)||'',coordinates:((_item$location2=item.location)===null||_item$location2===void 0?void 0:_item$location2.coordinates)||null,placeId:item.id,types:[],rating:0},date:itemDate.toISOString(),startTime:item.time,endTime:item.time,// Could calculate based on duration\nestimatedDuration:item.duration||60,notes:item.notes||'',order:index,isCustom:true,customTitle:item.title,customDescription:item.description||''};});console.log('🔄 Saving transformed itinerary:',transformedItinerary);updateItineraryMutation.mutate(transformedItinerary);};const getMapMarkers=()=>{return selectedPlaces.filter(place=>{var _place$geometry3;return(_place$geometry3=place.geometry)===null||_place$geometry3===void 0?void 0:_place$geometry3.location;}).map(place=>({position:{lat:place.geometry.location.lat(),lng:place.geometry.location.lng()},title:place.name,id:place.place_id}));};if(isLoading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}if(!(tripData!==null&&tripData!==void 0&&tripData.data.trip)){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-12\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600\",children:\"Trip not found\"})});}const trip=tripData.data.trip;const days=generateDays();// Debug logging\nconsole.log('Trip data:',trip);console.log('Generated days:',days);console.log('Days count:',days.length);return/*#__PURE__*/_jsx(DndProvider,{backend:HTML5Backend,children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>navigate(\"/trips/\".concat(id)),className:\"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4\",children:[/*#__PURE__*/_jsx(ArrowLeftIcon,{className:\"h-4 w-4 mr-1\"}),\"Back to Trip\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Plan Your Trip\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600\",children:[trip.title,\" - \",trip.destination]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveItinerary,disabled:updateItineraryMutation.isLoading,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\",children:updateItineraryMutation.isLoading?'Saving...':'Save Itinerary'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-1 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Search Places\"}),/*#__PURE__*/_jsx(PlacesSearch,{onPlaceSelect:handlePlaceSelect,placeholder:\"Search restaurants, attractions, hotels...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:[\"Selected Places (\",selectedPlaces.length,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:[selectedPlaces.map(place=>/*#__PURE__*/_jsx(DraggablePlace,{place:place,onRemove:()=>setSelectedPlaces(prev=>prev.filter(p=>p.place_id!==place.place_id))},place.place_id)),selectedPlaces.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm\",children:\"Search and select places to add to your itinerary\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(MapIcon,{className:\"h-5 w-5 mr-2\"}),\"Map View\",(tripData===null||tripData===void 0?void 0:tripData.data.trip)&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-sm text-gray-500\",children:[\"- \",tripData.data.trip.destination]})]}),!isMapReady&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-96 rounded-lg bg-gray-100 flex items-center justify-center mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-2\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-500\",children:[\"Loading map for \",tripData===null||tripData===void 0?void 0:(_tripData$data$trip=tripData.data.trip)===null||_tripData$data$trip===void 0?void 0:_tripData$data$trip.destination,\"...\"]})]})}),/*#__PURE__*/_jsx(GoogleMap,{center:mapCenter,zoom:isMapReady?13:12,onPlaceSelect:handleMapPlaceSelect,markers:getMapMarkers(),className:\"w-full h-96 rounded-lg \".concat(!isMapReady?'opacity-50':'')}),isMapReady&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-2 text-center\",children:[\"\\uD83D\\uDCCD Centered on: \",tripData===null||tripData===void 0?void 0:(_tripData$data$trip2=tripData.data.trip)===null||_tripData$data$trip2===void 0?void 0:_tripData$data$trip2.destination]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(CalendarIcon,{className:\"h-5 w-5 mr-2\"}),\"Daily Itinerary\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 max-h-96 overflow-y-auto\",children:days.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-4\",children:\"No days generated for this trip\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Trip dates: \",trip.startDate||trip.start_date,\" to \",trip.endDate||trip.end_date]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Duration: \",trip.duration,\" days\"]})]})]}):days.map(day=>/*#__PURE__*/_jsx(ItineraryDay,{day:day,items:itinerary.filter(item=>item.day===day.dayNumber),onDrop:place=>handleDropToDay(place,day.dayNumber),onRemoveItem:handleRemoveFromItinerary,onUpdateItem:handleUpdateItineraryItem,onMoveItem:handleMoveItineraryItem,onAddFlight:handleAddFlight},day.dayNumber))})]})})]})]})});};export default TripPlanningPage;","map":{"version":3,"names":["React","useState","useParams","useNavigate","useQuery","useMutation","useQueryClient","DndProvider","HTML5Backend","addDays","differenceInDays","tripsAPI","GoogleMap","PlacesSearch","DraggablePlace","ItineraryDay","LoadingSpinner","toast","ArrowLeftIcon","MapIcon","CalendarIcon","jsx","_jsx","jsxs","_jsxs","TripPlanningPage","_tripData$data$trip","_tripData$data$trip2","id","navigate","queryClient","selectedPlaces","setSelectedPlaces","mapCenter","setMapCenter","lat","lng","itinerary","setItinerary","isMapReady","setIsMapReady","data","tripData","isLoading","getTripById","enabled","onSuccess","response","trip","length","transformedItinerary","map","item","index","_item$place","_item$place2","_item$place3","_item$place4","_item$place5","_item$place6","tripStartDate","Date","startDate","itemDate","date","dayNumber","Math","floor","getTime","isFlightItem","flightInfo","place","types","includes","_id","concat","day","max","time","startTime","title","customTitle","name","description","customDescription","address","location","coordinates","undefined","duration","estimatedDuration","type","notes","console","log","destination","geocodeDestination","updateItineraryMutation","updateItinerary","invalidateQueries","success","onError","error","_error$response","_error$response$data","message","attemptGeocode","window","google","maps","Geocoder","geocoder","geocode","results","status","geometry","newCenter","formatted_address","setDefaultLocationForDestination","setTimeout","dest","toLowerCase","defaultCenter","handlePlaceSelect","_place$geometry","prev","exists","find","p","place_id","handleMapPlaceSelect","newPlace","now","generateDays","endDate","startDateStr","start_date","endDateStr","end_date","isNaN","setDate","getDate","dayCount","Array","from","_","handleDropToDay","_place$geometry2","newItineraryItem","handleRemoveFromItinerary","itemId","filter","handleUpdateItineraryItem","updates","_objectSpread","handleMoveItineraryItem","newDay","handleAddFlight","newFlightItem","airline","flightNumber","departure","airportCode","arrival","airport","parseInt","replace","bookingReference","handleSaveItinerary","_item$location","_item$location2","placeId","rating","toISOString","endTime","order","isCustom","mutate","getMapMarkers","_place$geometry3","position","className","children","days","backend","onClick","disabled","onPlaceSelect","placeholder","onRemove","center","zoom","markers","items","onDrop","onRemoveItem","onUpdateItem","onMoveItem","onAddFlight"],"sources":["/Users/jeanlee/travel-diary-app/client/src/pages/TripPlanningPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { format, addDays, differenceInDays } from 'date-fns';\nimport { tripsAPI } from '../services/api';\nimport { Trip, ItineraryItem, FlightInfo } from '../types';\nimport GoogleMap from '../components/GoogleMap';\nimport PlacesSearch from '../components/PlacesSearch';\nimport DraggablePlace from '../components/DraggablePlace';\nimport ItineraryDay from '../components/ItineraryDay';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport toast from 'react-hot-toast';\nimport {\n  ArrowLeftIcon,\n  PlusIcon,\n  MapIcon,\n  CalendarIcon,\n  ClockIcon,\n} from '@heroicons/react/24/outline';\n\ninterface Place {\n  place_id: string;\n  name: string;\n  formatted_address: string;\n  geometry?: {\n    location: google.maps.LatLng;\n  };\n  photos?: google.maps.places.PlacePhoto[];\n  rating?: number;\n  types?: string[];\n}\n\nconst TripPlanningPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const [selectedPlaces, setSelectedPlaces] = useState<Place[]>([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 48.8566, lng: 2.3522 }); // Default to Paris\n  const [itinerary, setItinerary] = useState<ItineraryItem[]>([]);\n  const [isMapReady, setIsMapReady] = useState(false);\n\n  // Fetch trip data\n  const { data: tripData, isLoading } = useQuery(\n    ['trip', id],\n    () => tripsAPI.getTripById(id!),\n    {\n      enabled: !!id,\n      onSuccess: (response) => {\n        const trip = response.data.trip;\n        \n        // Transform backend itinerary to frontend format\n        if (trip.itinerary && trip.itinerary.length > 0) {\n          const transformedItinerary = trip.itinerary.map((item: any, index: number) => {\n            // Calculate day number from date\n            const tripStartDate = new Date(trip.startDate);\n            const itemDate = new Date(item.date);\n            const dayNumber = Math.floor((itemDate.getTime() - tripStartDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n\n            // Check if this is a flight item\n            const isFlightItem = item.flightInfo || (item.place?.types && item.place.types.includes('flight'));\n\n            return {\n              id: item._id || `item_${index}`,\n              day: Math.max(1, dayNumber),\n              time: item.startTime || '09:00',\n              title: item.customTitle || item.place?.name || 'Activity',\n              description: item.customDescription || item.place?.address || '',\n              location: {\n                name: item.place?.name || '',\n                address: item.place?.address || '',\n                coordinates: item.place?.coordinates || undefined,\n              },\n              duration: item.estimatedDuration || (isFlightItem ? 120 : 60),\n              type: isFlightItem ? 'flight' as const : 'activity' as const,\n              notes: item.notes || '',\n              // Include flight info if available\n              flightInfo: item.flightInfo || undefined,\n            };\n          });\n          \n          console.log('📥 Loaded and transformed itinerary:', transformedItinerary);\n          setItinerary(transformedItinerary);\n        } else {\n          setItinerary([]);\n        }\n        \n        // Set map center based on destination\n        if (trip.destination) {\n          console.log('🗺️ Setting map center for destination:', trip.destination);\n          geocodeDestination(trip.destination);\n        }\n      },\n    }\n  );\n\n  // Update itinerary mutation\n  const updateItineraryMutation = useMutation(\n    (transformedItinerary: any[]) => tripsAPI.updateItinerary(id!, transformedItinerary),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['trip', id]);\n        toast.success('Itinerary updated successfully!');\n      },\n      onError: (error: any) => {\n        console.error('❌ Itinerary save error:', error);\n        const message = error.response?.data?.message || 'Failed to update itinerary';\n        toast.error(`Server error while saving itinerary: ${message}`);\n      },\n    }\n  );\n\n  const geocodeDestination = (destination: string) => {\n    console.log('🔍 Attempting to geocode destination:', destination);\n    \n    const attemptGeocode = () => {\n      if (window.google && window.google.maps && window.google.maps.Geocoder) {\n        console.log('✅ Google Maps Geocoder available');\n        const geocoder = new google.maps.Geocoder();\n        \n        geocoder.geocode({ address: destination }, (results, status) => {\n          console.log('📍 Geocoding result:', status, results);\n          \n          if (status === 'OK' && results && results[0]) {\n            const location = results[0].geometry.location;\n            const newCenter = {\n              lat: location.lat(),\n              lng: location.lng(),\n            };\n            \n            console.log('🎯 Setting map center to:', newCenter);\n            setMapCenter(newCenter);\n            setIsMapReady(true);\n            \n            // Also log the formatted address\n            console.log('📍 Geocoded address:', results[0].formatted_address);\n          } else {\n            console.error('❌ Geocoding failed:', status);\n            // Fallback to default location for the destination\n            setDefaultLocationForDestination(destination);\n          }\n        });\n      } else {\n        console.log('⏳ Google Maps not ready, retrying in 1 second...');\n        setTimeout(attemptGeocode, 1000);\n      }\n    };\n\n    attemptGeocode();\n  };\n\n  const setDefaultLocationForDestination = (destination: string) => {\n    // Set reasonable defaults for common destinations\n    const dest = destination.toLowerCase();\n    let defaultCenter = { lat: 48.8566, lng: 2.3522 }; // Paris default\n    \n    if (dest.includes('paris')) {\n      defaultCenter = { lat: 48.8566, lng: 2.3522 };\n    } else if (dest.includes('london')) {\n      defaultCenter = { lat: 51.5074, lng: -0.1278 };\n    } else if (dest.includes('new york') || dest.includes('nyc')) {\n      defaultCenter = { lat: 40.7128, lng: -74.0060 };\n    } else if (dest.includes('tokyo')) {\n      defaultCenter = { lat: 35.6762, lng: 139.6503 };\n    } else if (dest.includes('rome')) {\n      defaultCenter = { lat: 41.9028, lng: 12.4964 };\n    } else if (dest.includes('barcelona')) {\n      defaultCenter = { lat: 41.3851, lng: 2.1734 };\n    } else if (dest.includes('amsterdam')) {\n      defaultCenter = { lat: 52.3676, lng: 4.9041 };\n    } else if (dest.includes('berlin')) {\n      defaultCenter = { lat: 52.5200, lng: 13.4050 };\n    }\n    \n    console.log('🗺️ Using default location for', destination, ':', defaultCenter);\n    setMapCenter(defaultCenter);\n    setIsMapReady(true);\n  };\n\n  const handlePlaceSelect = (place: Place) => {\n    setSelectedPlaces(prev => {\n      const exists = prev.find(p => p.place_id === place.place_id);\n      if (!exists) {\n        return [...prev, place];\n      }\n      return prev;\n    });\n\n    // Update map center to selected place\n    if (place.geometry?.location) {\n      setMapCenter({\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng(),\n      });\n    }\n  };\n\n  const handleMapPlaceSelect = (place: any) => {\n    const newPlace: Place = {\n      place_id: place.place_id || `custom_${Date.now()}`,\n      name: place.name || 'Selected Location',\n      formatted_address: place.formatted_address || '',\n      geometry: place.geometry,\n    };\n    handlePlaceSelect(newPlace);\n  };\n\n  const generateDays = () => {\n    if (!tripData?.data.trip) return [];\n    \n    const trip = tripData.data.trip;\n    \n    // Handle different date formats from backend\n    let startDate: Date;\n    let endDate: Date;\n    \n    try {\n      // Frontend uses camelCase, backend uses snake_case\n      const startDateStr = trip.startDate || (trip as any).start_date;\n      const endDateStr = trip.endDate || (trip as any).end_date;\n      \n      startDate = new Date(startDateStr);\n      endDate = new Date(endDateStr);\n      \n      // If invalid dates, try parsing as YYYY-MM-DD\n      if (isNaN(startDate.getTime())) {\n        startDate = new Date(startDateStr + 'T00:00:00');\n      }\n      if (isNaN(endDate.getTime())) {\n        endDate = new Date(endDateStr + 'T00:00:00');\n      }\n      \n      // Fallback to duration if dates still invalid\n      if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n        startDate = new Date();\n        endDate = new Date();\n        const duration = (trip as any).duration || 7;\n        endDate.setDate(startDate.getDate() + duration - 1);\n      }\n    } catch (error) {\n      console.error('Date parsing error:', error);\n      // Fallback dates\n      startDate = new Date();\n      endDate = new Date();\n      const duration = (trip as any).duration || 7;\n      endDate.setDate(startDate.getDate() + duration - 1);\n    }\n    \n    const dayCount = Math.max(1, differenceInDays(endDate, startDate) + 1);\n    \n    return Array.from({ length: dayCount }, (_, index) => ({\n      date: addDays(startDate, index),\n      dayNumber: index + 1,\n    }));\n  };\n\n  const handleDropToDay = (place: Place, dayNumber: number) => {\n    const newItineraryItem: ItineraryItem = {\n      id: `${place.place_id}_${dayNumber}_${Date.now()}`,\n      day: dayNumber,\n      time: '09:00',\n      title: place.name,\n      description: place.formatted_address,\n      location: {\n        name: place.name,\n        address: place.formatted_address,\n        coordinates: place.geometry?.location ? {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n        } : undefined,\n      },\n      duration: 60, // Default 1 hour\n      type: 'activity',\n    };\n\n    setItinerary(prev => [...prev, newItineraryItem]);\n  };\n\n  const handleRemoveFromItinerary = (itemId: string) => {\n    setItinerary(prev => prev.filter(item => item.id !== itemId));\n  };\n\n  const handleUpdateItineraryItem = (itemId: string, updates: Partial<ItineraryItem>) => {\n    setItinerary(prev => prev.map(item => \n      item.id === itemId ? { ...item, ...updates } : item\n    ));\n  };\n\n  const handleMoveItineraryItem = (itemId: string, newDay: number) => {\n    setItinerary(prev => prev.map(item => \n      item.id === itemId ? { ...item, day: newDay } : item\n    ));\n  };\n\n  const handleAddFlight = (dayNumber: number, flightInfo: FlightInfo, time: string) => {\n    const newFlightItem: ItineraryItem = {\n      id: `flight_${dayNumber}_${Date.now()}`,\n      day: dayNumber,\n      time: time,\n      title: `${flightInfo.airline} ${flightInfo.flightNumber}`,\n      description: `${flightInfo.departure.airportCode} → ${flightInfo.arrival.airportCode}`,\n      location: {\n        name: `${flightInfo.departure.airport} to ${flightInfo.arrival.airport}`,\n        address: `${flightInfo.departure.airportCode} → ${flightInfo.arrival.airportCode}`,\n        coordinates: undefined, // Flights don't have single coordinates\n      },\n      duration: flightInfo.duration ? parseInt(flightInfo.duration.replace(/[^\\d]/g, '')) * 60 : 120, // Convert to minutes\n      type: 'flight',\n      flightInfo: flightInfo,\n      notes: flightInfo.bookingReference ? `Booking: ${flightInfo.bookingReference}` : '',\n    };\n\n    setItinerary(prev => [...prev, newFlightItem]);\n    toast.success('Flight added to itinerary!');\n  };\n\n  const handleSaveItinerary = () => {\n    // Transform the itinerary to match backend schema\n    const transformedItinerary = itinerary.map((item, index) => {\n      // Calculate the actual date based on trip start date and day number\n      const tripStartDate = new Date(tripData?.data.trip.startDate || Date.now());\n      const itemDate = new Date(tripStartDate);\n      itemDate.setDate(itemDate.getDate() + (item.day - 1));\n\n      // Handle flight items differently\n      if (item.type === 'flight' && item.flightInfo) {\n        return {\n          place: {\n            name: item.title,\n            address: item.description || '',\n            coordinates: null,\n            placeId: item.id,\n            types: ['flight'],\n            rating: 0\n          },\n          date: itemDate.toISOString(),\n          startTime: item.time,\n          endTime: item.time,\n          estimatedDuration: item.duration || 120,\n          notes: item.notes || '',\n          order: index,\n          isCustom: true,\n          customTitle: item.title,\n          customDescription: item.description || '',\n          // Store flight info in notes for backend compatibility\n          flightInfo: item.flightInfo\n        };\n      }\n\n      // Handle regular activity items\n      return {\n        place: {\n          name: item.title,\n          address: item.description || item.location?.address || '',\n          coordinates: item.location?.coordinates || null,\n          placeId: item.id,\n          types: [],\n          rating: 0\n        },\n        date: itemDate.toISOString(),\n        startTime: item.time,\n        endTime: item.time, // Could calculate based on duration\n        estimatedDuration: item.duration || 60,\n        notes: item.notes || '',\n        order: index,\n        isCustom: true,\n        customTitle: item.title,\n        customDescription: item.description || ''\n      };\n    });\n\n    console.log('🔄 Saving transformed itinerary:', transformedItinerary);\n    updateItineraryMutation.mutate(transformedItinerary);\n  };\n\n  const getMapMarkers = () => {\n    return selectedPlaces\n      .filter(place => place.geometry?.location)\n      .map(place => ({\n        position: {\n          lat: place.geometry!.location!.lat(),\n          lng: place.geometry!.location!.lng(),\n        },\n        title: place.name,\n        id: place.place_id,\n      }));\n  };\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  if (!tripData?.data.trip) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-red-600\">Trip not found</p>\n      </div>\n    );\n  }\n\n  const trip = tripData.data.trip;\n  const days = generateDays();\n\n  // Debug logging\n  console.log('Trip data:', trip);\n  console.log('Generated days:', days);\n  console.log('Days count:', days.length);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <button\n            onClick={() => navigate(`/trips/${id}`)}\n            className=\"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4\"\n          >\n            <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\n            Back to Trip\n          </button>\n          \n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Plan Your Trip</h1>\n              <p className=\"text-gray-600\">{trip.title} - {trip.destination}</p>\n            </div>\n            <button\n              onClick={handleSaveItinerary}\n              disabled={updateItineraryMutation.isLoading}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n            >\n              {updateItineraryMutation.isLoading ? 'Saving...' : 'Save Itinerary'}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Panel - Search and Places */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Places Search */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Search Places</h2>\n              <PlacesSearch\n                onPlaceSelect={handlePlaceSelect}\n                placeholder=\"Search restaurants, attractions, hotels...\"\n              />\n            </div>\n\n            {/* Selected Places */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n                Selected Places ({selectedPlaces.length})\n              </h2>\n              <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                {selectedPlaces.map((place) => (\n                  <DraggablePlace\n                    key={place.place_id}\n                    place={place}\n                    onRemove={() => setSelectedPlaces(prev => \n                      prev.filter(p => p.place_id !== place.place_id)\n                    )}\n                  />\n                ))}\n                {selectedPlaces.length === 0 && (\n                  <p className=\"text-gray-500 text-sm\">\n                    Search and select places to add to your itinerary\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Middle Panel - Map */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n                <MapIcon className=\"h-5 w-5 mr-2\" />\n                Map View\n                {tripData?.data.trip && (\n                  <span className=\"ml-2 text-sm text-gray-500\">\n                    - {tripData.data.trip.destination}\n                  </span>\n                )}\n              </h2>\n              {!isMapReady && (\n                <div className=\"w-full h-96 rounded-lg bg-gray-100 flex items-center justify-center mb-4\">\n                  <div className=\"text-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-2\"></div>\n                    <p className=\"text-gray-500\">Loading map for {tripData?.data.trip?.destination}...</p>\n                  </div>\n                </div>\n              )}\n              <GoogleMap\n                center={mapCenter}\n                zoom={isMapReady ? 13 : 12}\n                onPlaceSelect={handleMapPlaceSelect}\n                markers={getMapMarkers()}\n                className={`w-full h-96 rounded-lg ${!isMapReady ? 'opacity-50' : ''}`}\n              />\n              {isMapReady && (\n                <p className=\"text-xs text-gray-500 mt-2 text-center\">\n                  📍 Centered on: {tripData?.data.trip?.destination}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Right Panel - Itinerary */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n                <CalendarIcon className=\"h-5 w-5 mr-2\" />\n                Daily Itinerary\n              </h2>\n              <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                {days.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <p className=\"text-gray-500 mb-4\">No days generated for this trip</p>\n                    <div className=\"text-xs text-gray-400\">\n                      <p>Trip dates: {trip.startDate || (trip as any).start_date} to {trip.endDate || (trip as any).end_date}</p>\n                      <p>Duration: {(trip as any).duration} days</p>\n                    </div>\n                  </div>\n                ) : (\n                  days.map((day) => (\n                    <ItineraryDay\n                      key={day.dayNumber}\n                      day={day}\n                      items={itinerary.filter(item => item.day === day.dayNumber)}\n                      onDrop={(place) => handleDropToDay(place, day.dayNumber)}\n                      onRemoveItem={handleRemoveFromItinerary}\n                      onUpdateItem={handleUpdateItineraryItem}\n                      onMoveItem={handleMoveItineraryItem}\n                      onAddFlight={handleAddFlight}\n                    />\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default TripPlanningPage;\n"],"mappings":"2HAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAmB,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,OAASC,QAAQ,CAAEC,WAAW,CAAEC,cAAc,KAAQ,aAAa,CACnE,OAASC,WAAW,KAAQ,WAAW,CACvC,OAASC,YAAY,KAAQ,yBAAyB,CACtD,OAAiBC,OAAO,CAAEC,gBAAgB,KAAQ,UAAU,CAC5D,OAASC,QAAQ,KAAQ,iBAAiB,CAE1C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,OACEC,aAAa,CAEbC,OAAO,CACPC,YAAY,KAEP,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAcrC,KAAM,CAAAC,gBAA0B,CAAGA,CAAA,GAAM,KAAAC,mBAAA,CAAAC,oBAAA,CACvC,KAAM,CAAEC,EAAG,CAAC,CAAG1B,SAAS,CAAiB,CAAC,CAC1C,KAAM,CAAA2B,QAAQ,CAAG1B,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAA2B,WAAW,CAAGxB,cAAc,CAAC,CAAC,CAEpC,KAAM,CAACyB,cAAc,CAAEC,iBAAiB,CAAC,CAAG/B,QAAQ,CAAU,EAAE,CAAC,CACjE,KAAM,CAACgC,SAAS,CAAEC,YAAY,CAAC,CAAGjC,QAAQ,CAAC,CAAEkC,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAO,CAAC,CAAC,CAAE;AAC3E,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGrC,QAAQ,CAAkB,EAAE,CAAC,CAC/D,KAAM,CAACsC,UAAU,CAAEC,aAAa,CAAC,CAAGvC,QAAQ,CAAC,KAAK,CAAC,CAEnD;AACA,KAAM,CAAEwC,IAAI,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAGvC,QAAQ,CAC5C,CAAC,MAAM,CAAEwB,EAAE,CAAC,CACZ,IAAMjB,QAAQ,CAACiC,WAAW,CAAChB,EAAG,CAAC,CAC/B,CACEiB,OAAO,CAAE,CAAC,CAACjB,EAAE,CACbkB,SAAS,CAAGC,QAAQ,EAAK,CACvB,KAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACN,IAAI,CAACO,IAAI,CAE/B;AACA,GAAIA,IAAI,CAACX,SAAS,EAAIW,IAAI,CAACX,SAAS,CAACY,MAAM,CAAG,CAAC,CAAE,CAC/C,KAAM,CAAAC,oBAAoB,CAAGF,IAAI,CAACX,SAAS,CAACc,GAAG,CAAC,CAACC,IAAS,CAAEC,KAAa,GAAK,KAAAC,WAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,YAAA,CAC5E;AACA,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACb,IAAI,CAACc,SAAS,CAAC,CAC9C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAF,IAAI,CAACT,IAAI,CAACY,IAAI,CAAC,CACpC,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,KAAK,CAAC,CAACJ,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAGR,aAAa,CAACQ,OAAO,CAAC,CAAC,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAAG,CAAC,CAExG;AACA,KAAM,CAAAC,YAAY,CAAGjB,IAAI,CAACkB,UAAU,EAAK,EAAAhB,WAAA,CAAAF,IAAI,CAACmB,KAAK,UAAAjB,WAAA,iBAAVA,WAAA,CAAYkB,KAAK,GAAIpB,IAAI,CAACmB,KAAK,CAACC,KAAK,CAACC,QAAQ,CAAC,QAAQ,CAAE,CAElG,MAAO,CACL7C,EAAE,CAAEwB,IAAI,CAACsB,GAAG,UAAAC,MAAA,CAAYtB,KAAK,CAAE,CAC/BuB,GAAG,CAAEV,IAAI,CAACW,GAAG,CAAC,CAAC,CAAEZ,SAAS,CAAC,CAC3Ba,IAAI,CAAE1B,IAAI,CAAC2B,SAAS,EAAI,OAAO,CAC/BC,KAAK,CAAE5B,IAAI,CAAC6B,WAAW,IAAA1B,YAAA,CAAIH,IAAI,CAACmB,KAAK,UAAAhB,YAAA,iBAAVA,YAAA,CAAY2B,IAAI,GAAI,UAAU,CACzDC,WAAW,CAAE/B,IAAI,CAACgC,iBAAiB,IAAA5B,YAAA,CAAIJ,IAAI,CAACmB,KAAK,UAAAf,YAAA,iBAAVA,YAAA,CAAY6B,OAAO,GAAI,EAAE,CAChEC,QAAQ,CAAE,CACRJ,IAAI,CAAE,EAAAzB,YAAA,CAAAL,IAAI,CAACmB,KAAK,UAAAd,YAAA,iBAAVA,YAAA,CAAYyB,IAAI,GAAI,EAAE,CAC5BG,OAAO,CAAE,EAAA3B,YAAA,CAAAN,IAAI,CAACmB,KAAK,UAAAb,YAAA,iBAAVA,YAAA,CAAY2B,OAAO,GAAI,EAAE,CAClCE,WAAW,CAAE,EAAA5B,YAAA,CAAAP,IAAI,CAACmB,KAAK,UAAAZ,YAAA,iBAAVA,YAAA,CAAY4B,WAAW,GAAIC,SAC1C,CAAC,CACDC,QAAQ,CAAErC,IAAI,CAACsC,iBAAiB,GAAKrB,YAAY,CAAG,GAAG,CAAG,EAAE,CAAC,CAC7DsB,IAAI,CAAEtB,YAAY,CAAG,QAAQ,CAAY,UAAmB,CAC5DuB,KAAK,CAAExC,IAAI,CAACwC,KAAK,EAAI,EAAE,CACvB;AACAtB,UAAU,CAAElB,IAAI,CAACkB,UAAU,EAAIkB,SACjC,CAAC,CACH,CAAC,CAAC,CAEFK,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAE5C,oBAAoB,CAAC,CACzEZ,YAAY,CAACY,oBAAoB,CAAC,CACpC,CAAC,IAAM,CACLZ,YAAY,CAAC,EAAE,CAAC,CAClB,CAEA;AACA,GAAIU,IAAI,CAAC+C,WAAW,CAAE,CACpBF,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAE9C,IAAI,CAAC+C,WAAW,CAAC,CACxEC,kBAAkB,CAAChD,IAAI,CAAC+C,WAAW,CAAC,CACtC,CACF,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAE,uBAAuB,CAAG5F,WAAW,CACxC6C,oBAA2B,EAAKvC,QAAQ,CAACuF,eAAe,CAACtE,EAAE,CAAGsB,oBAAoB,CAAC,CACpF,CACEJ,SAAS,CAAEA,CAAA,GAAM,CACfhB,WAAW,CAACqE,iBAAiB,CAAC,CAAC,MAAM,CAAEvE,EAAE,CAAC,CAAC,CAC3CX,KAAK,CAACmF,OAAO,CAAC,iCAAiC,CAAC,CAClD,CAAC,CACDC,OAAO,CAAGC,KAAU,EAAK,KAAAC,eAAA,CAAAC,oBAAA,CACvBX,OAAO,CAACS,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,CAAAG,OAAO,CAAG,EAAAF,eAAA,CAAAD,KAAK,CAACvD,QAAQ,UAAAwD,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgB9D,IAAI,UAAA+D,oBAAA,iBAApBA,oBAAA,CAAsBC,OAAO,GAAI,4BAA4B,CAC7ExF,KAAK,CAACqF,KAAK,yCAAA3B,MAAA,CAAyC8B,OAAO,CAAE,CAAC,CAChE,CACF,CACF,CAAC,CAED,KAAM,CAAAT,kBAAkB,CAAID,WAAmB,EAAK,CAClDF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAEC,WAAW,CAAC,CAEjE,KAAM,CAAAW,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIC,MAAM,CAACC,MAAM,EAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAIF,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAE,CACtEjB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,KAAM,CAAAiB,QAAQ,CAAG,GAAI,CAAAH,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAE3CC,QAAQ,CAACC,OAAO,CAAC,CAAE3B,OAAO,CAAEU,WAAY,CAAC,CAAE,CAACkB,OAAO,CAAEC,MAAM,GAAK,CAC9DrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEoB,MAAM,CAAED,OAAO,CAAC,CAEpD,GAAIC,MAAM,GAAK,IAAI,EAAID,OAAO,EAAIA,OAAO,CAAC,CAAC,CAAC,CAAE,CAC5C,KAAM,CAAA3B,QAAQ,CAAG2B,OAAO,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC7B,QAAQ,CAC7C,KAAM,CAAA8B,SAAS,CAAG,CAChBjF,GAAG,CAAEmD,QAAQ,CAACnD,GAAG,CAAC,CAAC,CACnBC,GAAG,CAAEkD,QAAQ,CAAClD,GAAG,CAAC,CACpB,CAAC,CAEDyD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEsB,SAAS,CAAC,CACnDlF,YAAY,CAACkF,SAAS,CAAC,CACvB5E,aAAa,CAAC,IAAI,CAAC,CAEnB;AACAqD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEmB,OAAO,CAAC,CAAC,CAAC,CAACI,iBAAiB,CAAC,CACnE,CAAC,IAAM,CACLxB,OAAO,CAACS,KAAK,CAAC,qBAAqB,CAAEY,MAAM,CAAC,CAC5C;AACAI,gCAAgC,CAACvB,WAAW,CAAC,CAC/C,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC,CAC/DyB,UAAU,CAACb,cAAc,CAAE,IAAI,CAAC,CAClC,CACF,CAAC,CAEDA,cAAc,CAAC,CAAC,CAClB,CAAC,CAED,KAAM,CAAAY,gCAAgC,CAAIvB,WAAmB,EAAK,CAChE;AACA,KAAM,CAAAyB,IAAI,CAAGzB,WAAW,CAAC0B,WAAW,CAAC,CAAC,CACtC,GAAI,CAAAC,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAO,CAAC,CAAE;AAEnD,GAAIoF,IAAI,CAAC/C,QAAQ,CAAC,OAAO,CAAC,CAAE,CAC1BiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAO,CAAC,CAC/C,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAClCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,MAAO,CAAC,CAChD,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,UAAU,CAAC,EAAI+C,IAAI,CAAC/C,QAAQ,CAAC,KAAK,CAAC,CAAE,CAC5DiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,OAAQ,CAAC,CACjD,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,OAAO,CAAC,CAAE,CACjCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,QAAS,CAAC,CACjD,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,MAAM,CAAC,CAAE,CAChCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,OAAQ,CAAC,CAChD,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,WAAW,CAAC,CAAE,CACrCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAO,CAAC,CAC/C,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,WAAW,CAAC,CAAE,CACrCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAO,CAAC,CAC/C,CAAC,IAAM,IAAIoF,IAAI,CAAC/C,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAClCiD,aAAa,CAAG,CAAEvF,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,OAAQ,CAAC,CAChD,CAEAyD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEC,WAAW,CAAE,GAAG,CAAE2B,aAAa,CAAC,CAC9ExF,YAAY,CAACwF,aAAa,CAAC,CAC3BlF,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAmF,iBAAiB,CAAIpD,KAAY,EAAK,KAAAqD,eAAA,CAC1C5F,iBAAiB,CAAC6F,IAAI,EAAI,CACxB,KAAM,CAAAC,MAAM,CAAGD,IAAI,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,QAAQ,GAAK1D,KAAK,CAAC0D,QAAQ,CAAC,CAC5D,GAAI,CAACH,MAAM,CAAE,CACX,MAAO,CAAC,GAAGD,IAAI,CAAEtD,KAAK,CAAC,CACzB,CACA,MAAO,CAAAsD,IAAI,CACb,CAAC,CAAC,CAEF;AACA,IAAAD,eAAA,CAAIrD,KAAK,CAAC4C,QAAQ,UAAAS,eAAA,WAAdA,eAAA,CAAgBtC,QAAQ,CAAE,CAC5BpD,YAAY,CAAC,CACXC,GAAG,CAAEoC,KAAK,CAAC4C,QAAQ,CAAC7B,QAAQ,CAACnD,GAAG,CAAC,CAAC,CAClCC,GAAG,CAAEmC,KAAK,CAAC4C,QAAQ,CAAC7B,QAAQ,CAAClD,GAAG,CAAC,CACnC,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAA8F,oBAAoB,CAAI3D,KAAU,EAAK,CAC3C,KAAM,CAAA4D,QAAe,CAAG,CACtBF,QAAQ,CAAE1D,KAAK,CAAC0D,QAAQ,YAAAtD,MAAA,CAAcd,IAAI,CAACuE,GAAG,CAAC,CAAC,CAAE,CAClDlD,IAAI,CAAEX,KAAK,CAACW,IAAI,EAAI,mBAAmB,CACvCmC,iBAAiB,CAAE9C,KAAK,CAAC8C,iBAAiB,EAAI,EAAE,CAChDF,QAAQ,CAAE5C,KAAK,CAAC4C,QAClB,CAAC,CACDQ,iBAAiB,CAACQ,QAAQ,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAE,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,EAAC3F,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAED,IAAI,CAACO,IAAI,EAAE,MAAO,EAAE,CAEnC,KAAM,CAAAA,IAAI,CAAGN,QAAQ,CAACD,IAAI,CAACO,IAAI,CAE/B;AACA,GAAI,CAAAc,SAAe,CACnB,GAAI,CAAAwE,OAAa,CAEjB,GAAI,CACF;AACA,KAAM,CAAAC,YAAY,CAAGvF,IAAI,CAACc,SAAS,EAAKd,IAAI,CAASwF,UAAU,CAC/D,KAAM,CAAAC,UAAU,CAAGzF,IAAI,CAACsF,OAAO,EAAKtF,IAAI,CAAS0F,QAAQ,CAEzD5E,SAAS,CAAG,GAAI,CAAAD,IAAI,CAAC0E,YAAY,CAAC,CAClCD,OAAO,CAAG,GAAI,CAAAzE,IAAI,CAAC4E,UAAU,CAAC,CAE9B;AACA,GAAIE,KAAK,CAAC7E,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC,CAAE,CAC9BN,SAAS,CAAG,GAAI,CAAAD,IAAI,CAAC0E,YAAY,CAAG,WAAW,CAAC,CAClD,CACA,GAAII,KAAK,CAACL,OAAO,CAAClE,OAAO,CAAC,CAAC,CAAC,CAAE,CAC5BkE,OAAO,CAAG,GAAI,CAAAzE,IAAI,CAAC4E,UAAU,CAAG,WAAW,CAAC,CAC9C,CAEA;AACA,GAAIE,KAAK,CAAC7E,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC,EAAIuE,KAAK,CAACL,OAAO,CAAClE,OAAO,CAAC,CAAC,CAAC,CAAE,CAC1DN,SAAS,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACtByE,OAAO,CAAG,GAAI,CAAAzE,IAAI,CAAC,CAAC,CACpB,KAAM,CAAA4B,QAAQ,CAAIzC,IAAI,CAASyC,QAAQ,EAAI,CAAC,CAC5C6C,OAAO,CAACM,OAAO,CAAC9E,SAAS,CAAC+E,OAAO,CAAC,CAAC,CAAGpD,QAAQ,CAAG,CAAC,CAAC,CACrD,CACF,CAAE,MAAOa,KAAK,CAAE,CACdT,OAAO,CAACS,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C;AACAxC,SAAS,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACtByE,OAAO,CAAG,GAAI,CAAAzE,IAAI,CAAC,CAAC,CACpB,KAAM,CAAA4B,QAAQ,CAAIzC,IAAI,CAASyC,QAAQ,EAAI,CAAC,CAC5C6C,OAAO,CAACM,OAAO,CAAC9E,SAAS,CAAC+E,OAAO,CAAC,CAAC,CAAGpD,QAAQ,CAAG,CAAC,CAAC,CACrD,CAEA,KAAM,CAAAqD,QAAQ,CAAG5E,IAAI,CAACW,GAAG,CAAC,CAAC,CAAEnE,gBAAgB,CAAC4H,OAAO,CAAExE,SAAS,CAAC,CAAG,CAAC,CAAC,CAEtE,MAAO,CAAAiF,KAAK,CAACC,IAAI,CAAC,CAAE/F,MAAM,CAAE6F,QAAS,CAAC,CAAE,CAACG,CAAC,CAAE5F,KAAK,IAAM,CACrDW,IAAI,CAAEvD,OAAO,CAACqD,SAAS,CAAET,KAAK,CAAC,CAC/BY,SAAS,CAAEZ,KAAK,CAAG,CACrB,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAA6F,eAAe,CAAGA,CAAC3E,KAAY,CAAEN,SAAiB,GAAK,KAAAkF,gBAAA,CAC3D,KAAM,CAAAC,gBAA+B,CAAG,CACtCxH,EAAE,IAAA+C,MAAA,CAAKJ,KAAK,CAAC0D,QAAQ,MAAAtD,MAAA,CAAIV,SAAS,MAAAU,MAAA,CAAId,IAAI,CAACuE,GAAG,CAAC,CAAC,CAAE,CAClDxD,GAAG,CAAEX,SAAS,CACda,IAAI,CAAE,OAAO,CACbE,KAAK,CAAET,KAAK,CAACW,IAAI,CACjBC,WAAW,CAAEZ,KAAK,CAAC8C,iBAAiB,CACpC/B,QAAQ,CAAE,CACRJ,IAAI,CAAEX,KAAK,CAACW,IAAI,CAChBG,OAAO,CAAEd,KAAK,CAAC8C,iBAAiB,CAChC9B,WAAW,CAAE,CAAA4D,gBAAA,CAAA5E,KAAK,CAAC4C,QAAQ,UAAAgC,gBAAA,WAAdA,gBAAA,CAAgB7D,QAAQ,CAAG,CACtCnD,GAAG,CAAEoC,KAAK,CAAC4C,QAAQ,CAAC7B,QAAQ,CAACnD,GAAG,CAAC,CAAC,CAClCC,GAAG,CAAEmC,KAAK,CAAC4C,QAAQ,CAAC7B,QAAQ,CAAClD,GAAG,CAAC,CACnC,CAAC,CAAGoD,SACN,CAAC,CACDC,QAAQ,CAAE,EAAE,CAAE;AACdE,IAAI,CAAE,UACR,CAAC,CAEDrD,YAAY,CAACuF,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEuB,gBAAgB,CAAC,CAAC,CACnD,CAAC,CAED,KAAM,CAAAC,yBAAyB,CAAIC,MAAc,EAAK,CACpDhH,YAAY,CAACuF,IAAI,EAAIA,IAAI,CAAC0B,MAAM,CAACnG,IAAI,EAAIA,IAAI,CAACxB,EAAE,GAAK0H,MAAM,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAE,yBAAyB,CAAGA,CAACF,MAAc,CAAEG,OAA+B,GAAK,CACrFnH,YAAY,CAACuF,IAAI,EAAIA,IAAI,CAAC1E,GAAG,CAACC,IAAI,EAChCA,IAAI,CAACxB,EAAE,GAAK0H,MAAM,CAAAI,aAAA,CAAAA,aAAA,IAAQtG,IAAI,EAAKqG,OAAO,EAAKrG,IACjD,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAuG,uBAAuB,CAAGA,CAACL,MAAc,CAAEM,MAAc,GAAK,CAClEtH,YAAY,CAACuF,IAAI,EAAIA,IAAI,CAAC1E,GAAG,CAACC,IAAI,EAChCA,IAAI,CAACxB,EAAE,GAAK0H,MAAM,CAAAI,aAAA,CAAAA,aAAA,IAAQtG,IAAI,MAAEwB,GAAG,CAAEgF,MAAM,GAAKxG,IAClD,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAyG,eAAe,CAAGA,CAAC5F,SAAiB,CAAEK,UAAsB,CAAEQ,IAAY,GAAK,CACnF,KAAM,CAAAgF,aAA4B,CAAG,CACnClI,EAAE,WAAA+C,MAAA,CAAYV,SAAS,MAAAU,MAAA,CAAId,IAAI,CAACuE,GAAG,CAAC,CAAC,CAAE,CACvCxD,GAAG,CAAEX,SAAS,CACda,IAAI,CAAEA,IAAI,CACVE,KAAK,IAAAL,MAAA,CAAKL,UAAU,CAACyF,OAAO,MAAApF,MAAA,CAAIL,UAAU,CAAC0F,YAAY,CAAE,CACzD7E,WAAW,IAAAR,MAAA,CAAKL,UAAU,CAAC2F,SAAS,CAACC,WAAW,aAAAvF,MAAA,CAAML,UAAU,CAAC6F,OAAO,CAACD,WAAW,CAAE,CACtF5E,QAAQ,CAAE,CACRJ,IAAI,IAAAP,MAAA,CAAKL,UAAU,CAAC2F,SAAS,CAACG,OAAO,SAAAzF,MAAA,CAAOL,UAAU,CAAC6F,OAAO,CAACC,OAAO,CAAE,CACxE/E,OAAO,IAAAV,MAAA,CAAKL,UAAU,CAAC2F,SAAS,CAACC,WAAW,aAAAvF,MAAA,CAAML,UAAU,CAAC6F,OAAO,CAACD,WAAW,CAAE,CAClF3E,WAAW,CAAEC,SAAW;AAC1B,CAAC,CACDC,QAAQ,CAAEnB,UAAU,CAACmB,QAAQ,CAAG4E,QAAQ,CAAC/F,UAAU,CAACmB,QAAQ,CAAC6E,OAAO,CAAC,QAAQ,CAAE,EAAE,CAAC,CAAC,CAAG,EAAE,CAAG,GAAG,CAAE;AAChG3E,IAAI,CAAE,QAAQ,CACdrB,UAAU,CAAEA,UAAU,CACtBsB,KAAK,CAAEtB,UAAU,CAACiG,gBAAgB,aAAA5F,MAAA,CAAeL,UAAU,CAACiG,gBAAgB,EAAK,EACnF,CAAC,CAEDjI,YAAY,CAACuF,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEiC,aAAa,CAAC,CAAC,CAC9C7I,KAAK,CAACmF,OAAO,CAAC,4BAA4B,CAAC,CAC7C,CAAC,CAED,KAAM,CAAAoE,mBAAmB,CAAGA,CAAA,GAAM,CAChC;AACA,KAAM,CAAAtH,oBAAoB,CAAGb,SAAS,CAACc,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,KAAAoH,cAAA,CAAAC,eAAA,CAC1D;AACA,KAAM,CAAA9G,aAAa,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAAnB,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAED,IAAI,CAACO,IAAI,CAACc,SAAS,GAAID,IAAI,CAACuE,GAAG,CAAC,CAAC,CAAC,CAC3E,KAAM,CAAArE,QAAQ,CAAG,GAAI,CAAAF,IAAI,CAACD,aAAa,CAAC,CACxCG,QAAQ,CAAC6E,OAAO,CAAC7E,QAAQ,CAAC8E,OAAO,CAAC,CAAC,EAAIzF,IAAI,CAACwB,GAAG,CAAG,CAAC,CAAC,CAAC,CAErD;AACA,GAAIxB,IAAI,CAACuC,IAAI,GAAK,QAAQ,EAAIvC,IAAI,CAACkB,UAAU,CAAE,CAC7C,MAAO,CACLC,KAAK,CAAE,CACLW,IAAI,CAAE9B,IAAI,CAAC4B,KAAK,CAChBK,OAAO,CAAEjC,IAAI,CAAC+B,WAAW,EAAI,EAAE,CAC/BI,WAAW,CAAE,IAAI,CACjBoF,OAAO,CAAEvH,IAAI,CAACxB,EAAE,CAChB4C,KAAK,CAAE,CAAC,QAAQ,CAAC,CACjBoG,MAAM,CAAE,CACV,CAAC,CACD5G,IAAI,CAAED,QAAQ,CAAC8G,WAAW,CAAC,CAAC,CAC5B9F,SAAS,CAAE3B,IAAI,CAAC0B,IAAI,CACpBgG,OAAO,CAAE1H,IAAI,CAAC0B,IAAI,CAClBY,iBAAiB,CAAEtC,IAAI,CAACqC,QAAQ,EAAI,GAAG,CACvCG,KAAK,CAAExC,IAAI,CAACwC,KAAK,EAAI,EAAE,CACvBmF,KAAK,CAAE1H,KAAK,CACZ2H,QAAQ,CAAE,IAAI,CACd/F,WAAW,CAAE7B,IAAI,CAAC4B,KAAK,CACvBI,iBAAiB,CAAEhC,IAAI,CAAC+B,WAAW,EAAI,EAAE,CACzC;AACAb,UAAU,CAAElB,IAAI,CAACkB,UACnB,CAAC,CACH,CAEA;AACA,MAAO,CACLC,KAAK,CAAE,CACLW,IAAI,CAAE9B,IAAI,CAAC4B,KAAK,CAChBK,OAAO,CAAEjC,IAAI,CAAC+B,WAAW,IAAAsF,cAAA,CAAIrH,IAAI,CAACkC,QAAQ,UAAAmF,cAAA,iBAAbA,cAAA,CAAepF,OAAO,GAAI,EAAE,CACzDE,WAAW,CAAE,EAAAmF,eAAA,CAAAtH,IAAI,CAACkC,QAAQ,UAAAoF,eAAA,iBAAbA,eAAA,CAAenF,WAAW,GAAI,IAAI,CAC/CoF,OAAO,CAAEvH,IAAI,CAACxB,EAAE,CAChB4C,KAAK,CAAE,EAAE,CACToG,MAAM,CAAE,CACV,CAAC,CACD5G,IAAI,CAAED,QAAQ,CAAC8G,WAAW,CAAC,CAAC,CAC5B9F,SAAS,CAAE3B,IAAI,CAAC0B,IAAI,CACpBgG,OAAO,CAAE1H,IAAI,CAAC0B,IAAI,CAAE;AACpBY,iBAAiB,CAAEtC,IAAI,CAACqC,QAAQ,EAAI,EAAE,CACtCG,KAAK,CAAExC,IAAI,CAACwC,KAAK,EAAI,EAAE,CACvBmF,KAAK,CAAE1H,KAAK,CACZ2H,QAAQ,CAAE,IAAI,CACd/F,WAAW,CAAE7B,IAAI,CAAC4B,KAAK,CACvBI,iBAAiB,CAAEhC,IAAI,CAAC+B,WAAW,EAAI,EACzC,CAAC,CACH,CAAC,CAAC,CAEFU,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAE5C,oBAAoB,CAAC,CACrE+C,uBAAuB,CAACgF,MAAM,CAAC/H,oBAAoB,CAAC,CACtD,CAAC,CAED,KAAM,CAAAgI,aAAa,CAAGA,CAAA,GAAM,CAC1B,MAAO,CAAAnJ,cAAc,CAClBwH,MAAM,CAAChF,KAAK,OAAA4G,gBAAA,QAAAA,gBAAA,CAAI5G,KAAK,CAAC4C,QAAQ,UAAAgE,gBAAA,iBAAdA,gBAAA,CAAgB7F,QAAQ,GAAC,CACzCnC,GAAG,CAACoB,KAAK,GAAK,CACb6G,QAAQ,CAAE,CACRjJ,GAAG,CAAEoC,KAAK,CAAC4C,QAAQ,CAAE7B,QAAQ,CAAEnD,GAAG,CAAC,CAAC,CACpCC,GAAG,CAAEmC,KAAK,CAAC4C,QAAQ,CAAE7B,QAAQ,CAAElD,GAAG,CAAC,CACrC,CAAC,CACD4C,KAAK,CAAET,KAAK,CAACW,IAAI,CACjBtD,EAAE,CAAE2C,KAAK,CAAC0D,QACZ,CAAC,CAAC,CAAC,CACP,CAAC,CAED,GAAItF,SAAS,CAAE,CACb,mBAAOrB,IAAA,CAACN,cAAc,GAAE,CAAC,CAC3B,CAEA,GAAI,EAAC0B,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAED,IAAI,CAACO,IAAI,EAAE,CACxB,mBACE1B,IAAA,QAAK+J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChChK,IAAA,MAAG+J,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,gBAAc,CAAG,CAAC,CAC3C,CAAC,CAEV,CAEA,KAAM,CAAAtI,IAAI,CAAGN,QAAQ,CAACD,IAAI,CAACO,IAAI,CAC/B,KAAM,CAAAuI,IAAI,CAAGlD,YAAY,CAAC,CAAC,CAE3B;AACAxC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAE9C,IAAI,CAAC,CAC/B6C,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEyF,IAAI,CAAC,CACpC1F,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEyF,IAAI,CAACtI,MAAM,CAAC,CAEvC,mBACE3B,IAAA,CAACf,WAAW,EAACiL,OAAO,CAAEhL,YAAa,CAAA8K,QAAA,cACjC9J,KAAA,QAAK6J,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eAErD9J,KAAA,QAAK6J,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB9J,KAAA,WACEiK,OAAO,CAAEA,CAAA,GAAM5J,QAAQ,WAAA8C,MAAA,CAAW/C,EAAE,CAAE,CAAE,CACxCyJ,SAAS,CAAC,yEAAyE,CAAAC,QAAA,eAEnFhK,IAAA,CAACJ,aAAa,EAACmK,SAAS,CAAC,cAAc,CAAE,CAAC,eAE5C,EAAQ,CAAC,cAET7J,KAAA,QAAK6J,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChD9J,KAAA,QAAA8J,QAAA,eACEhK,IAAA,OAAI+J,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cACpE9J,KAAA,MAAG6J,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAEtI,IAAI,CAACgC,KAAK,CAAC,KAAG,CAAChC,IAAI,CAAC+C,WAAW,EAAI,CAAC,EAC/D,CAAC,cACNzE,IAAA,WACEmK,OAAO,CAAEjB,mBAAoB,CAC7BkB,QAAQ,CAAEzF,uBAAuB,CAACtD,SAAU,CAC5C0I,SAAS,CAAC,4OAA4O,CAAAC,QAAA,CAErPrF,uBAAuB,CAACtD,SAAS,CAAG,WAAW,CAAG,gBAAgB,CAC7D,CAAC,EACN,CAAC,EACH,CAAC,cAENnB,KAAA,QAAK6J,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAEpD9J,KAAA,QAAK6J,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eAEtC9J,KAAA,QAAK6J,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7ChK,IAAA,OAAI+J,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cACzEhK,IAAA,CAACT,YAAY,EACX8K,aAAa,CAAEhE,iBAAkB,CACjCiE,WAAW,CAAC,4CAA4C,CACzD,CAAC,EACC,CAAC,cAGNpK,KAAA,QAAK6J,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C9J,KAAA,OAAI6J,SAAS,CAAC,wCAAwC,CAAAC,QAAA,EAAC,mBACpC,CAACvJ,cAAc,CAACkB,MAAM,CAAC,GAC1C,EAAI,CAAC,cACLzB,KAAA,QAAK6J,SAAS,CAAC,oCAAoC,CAAAC,QAAA,EAChDvJ,cAAc,CAACoB,GAAG,CAAEoB,KAAK,eACxBjD,IAAA,CAACR,cAAc,EAEbyD,KAAK,CAAEA,KAAM,CACbsH,QAAQ,CAAEA,CAAA,GAAM7J,iBAAiB,CAAC6F,IAAI,EACpCA,IAAI,CAAC0B,MAAM,CAACvB,CAAC,EAAIA,CAAC,CAACC,QAAQ,GAAK1D,KAAK,CAAC0D,QAAQ,CAChD,CAAE,EAJG1D,KAAK,CAAC0D,QAKZ,CACF,CAAC,CACDlG,cAAc,CAACkB,MAAM,GAAK,CAAC,eAC1B3B,IAAA,MAAG+J,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,mDAErC,CAAG,CACJ,EACE,CAAC,EACH,CAAC,EACH,CAAC,cAGNhK,IAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B9J,KAAA,QAAK6J,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C9J,KAAA,OAAI6J,SAAS,CAAC,0DAA0D,CAAAC,QAAA,eACtEhK,IAAA,CAACH,OAAO,EAACkK,SAAS,CAAC,cAAc,CAAE,CAAC,WAEpC,CAAC,CAAA3I,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAED,IAAI,CAACO,IAAI,gBAClBxB,KAAA,SAAM6J,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,IACzC,CAAC5I,QAAQ,CAACD,IAAI,CAACO,IAAI,CAAC+C,WAAW,EAC7B,CACP,EACC,CAAC,CACJ,CAACxD,UAAU,eACVjB,IAAA,QAAK+J,SAAS,CAAC,0EAA0E,CAAAC,QAAA,cACvF9J,KAAA,QAAK6J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,IAAA,QAAK+J,SAAS,CAAC,2EAA2E,CAAM,CAAC,cACjG7J,KAAA,MAAG6J,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,kBAAgB,CAAC5I,QAAQ,SAARA,QAAQ,kBAAAhB,mBAAA,CAARgB,QAAQ,CAAED,IAAI,CAACO,IAAI,UAAAtB,mBAAA,iBAAnBA,mBAAA,CAAqBqE,WAAW,CAAC,KAAG,EAAG,CAAC,EACnF,CAAC,CACH,CACN,cACDzE,IAAA,CAACV,SAAS,EACRkL,MAAM,CAAE7J,SAAU,CAClB8J,IAAI,CAAExJ,UAAU,CAAG,EAAE,CAAG,EAAG,CAC3BoJ,aAAa,CAAEzD,oBAAqB,CACpC8D,OAAO,CAAEd,aAAa,CAAC,CAAE,CACzBG,SAAS,2BAAA1G,MAAA,CAA4B,CAACpC,UAAU,CAAG,YAAY,CAAG,EAAE,CAAG,CACxE,CAAC,CACDA,UAAU,eACTf,KAAA,MAAG6J,SAAS,CAAC,wCAAwC,CAAAC,QAAA,EAAC,4BACpC,CAAC5I,QAAQ,SAARA,QAAQ,kBAAAf,oBAAA,CAARe,QAAQ,CAAED,IAAI,CAACO,IAAI,UAAArB,oBAAA,iBAAnBA,oBAAA,CAAqBoE,WAAW,EAChD,CACJ,EACE,CAAC,CACH,CAAC,cAGNzE,IAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B9J,KAAA,QAAK6J,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C9J,KAAA,OAAI6J,SAAS,CAAC,0DAA0D,CAAAC,QAAA,eACtEhK,IAAA,CAACF,YAAY,EAACiK,SAAS,CAAC,cAAc,CAAE,CAAC,kBAE3C,EAAI,CAAC,cACL/J,IAAA,QAAK+J,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAChDC,IAAI,CAACtI,MAAM,GAAK,CAAC,cAChBzB,KAAA,QAAK6J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhK,IAAA,MAAG+J,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,iCAA+B,CAAG,CAAC,cACrE9J,KAAA,QAAK6J,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC9J,KAAA,MAAA8J,QAAA,EAAG,cAAY,CAACtI,IAAI,CAACc,SAAS,EAAKd,IAAI,CAASwF,UAAU,CAAC,MAAI,CAACxF,IAAI,CAACsF,OAAO,EAAKtF,IAAI,CAAS0F,QAAQ,EAAI,CAAC,cAC3GlH,KAAA,MAAA8J,QAAA,EAAG,YAAU,CAAEtI,IAAI,CAASyC,QAAQ,CAAC,OAAK,EAAG,CAAC,EAC3C,CAAC,EACH,CAAC,CAEN8F,IAAI,CAACpI,GAAG,CAAEyB,GAAG,eACXtD,IAAA,CAACP,YAAY,EAEX6D,GAAG,CAAEA,GAAI,CACTqH,KAAK,CAAE5J,SAAS,CAACkH,MAAM,CAACnG,IAAI,EAAIA,IAAI,CAACwB,GAAG,GAAKA,GAAG,CAACX,SAAS,CAAE,CAC5DiI,MAAM,CAAG3H,KAAK,EAAK2E,eAAe,CAAC3E,KAAK,CAAEK,GAAG,CAACX,SAAS,CAAE,CACzDkI,YAAY,CAAE9C,yBAA0B,CACxC+C,YAAY,CAAE5C,yBAA0B,CACxC6C,UAAU,CAAE1C,uBAAwB,CACpC2C,WAAW,CAAEzC,eAAgB,EAPxBjF,GAAG,CAACX,SAQV,CACF,CACF,CACE,CAAC,EACH,CAAC,CACH,CAAC,EACH,CAAC,EACH,CAAC,CACK,CAAC,CAElB,CAAC,CAED,cAAe,CAAAxC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}