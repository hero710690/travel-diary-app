{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{authAPI}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initializeAuth=async()=>{try{const token=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(token&&savedUser){// Parse saved user first\nconst parsedUser=JSON.parse(savedUser);setUser(parsedUser);// Then verify token in background\ntry{const response=await authAPI.getMe();// Update with fresh user data if different\nif(JSON.stringify(response.data)!==savedUser){setUser(response.data);localStorage.setItem('user',JSON.stringify(response.data));}}catch(error){// Token invalid, clear auth\nconsole.log('Token validation failed, clearing auth');localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);}}}catch(error){console.error('Auth initialization error:',error);// Clear potentially corrupted data\nlocalStorage.removeItem('token');localStorage.removeItem('user');setUser(null);}setLoading(false);};initializeAuth();},[]);const login=async data=>{try{const response=await authAPI.login(data);const{token,user}=response.data;localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));setUser(user);toast.success('Welcome back!');}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Login failed';toast.error(message);throw error;}};const register=async data=>{try{const response=await authAPI.register(data);const{token,user}=response.data;localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));setUser(user);toast.success('Account created successfully!');}catch(error){var _error$response3,_error$response3$data,_error$response4,_error$response4$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.detail)||((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Registration failed';toast.error(message);throw error;}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);toast.success('Logged out successfully');};const updateUser=async data=>{try{const response=await authAPI.updateProfile(data);const updatedUser=response.data.user;setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));toast.success('Profile updated successfully');}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Update failed';toast.error(message);throw error;}};const value={user,loading,login,register,logout,updateUser,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","savedUser","parsedUser","JSON","parse","response","getMe","stringify","data","setItem","error","console","log","removeItem","login","success","_error$response","_error$response$data","_error$response2","_error$response2$data","message","detail","register","_error$response3","_error$response3$data","_error$response4","_error$response4$data","logout","updateUser","updateProfile","updatedUser","_error$response5","_error$response5$data","value","isAuthenticated","Provider"],"sources":["/Users/jeanlee/travel-diary-app/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { User, LoginForm, RegisterForm } from '../types';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (data: LoginForm) => Promise<void>;\n  register: (data: RegisterForm) => Promise<void>;\n  logout: () => void;\n  updateUser: (data: Partial<User>) => Promise<void>;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const savedUser = localStorage.getItem('user');\n\n        if (token && savedUser) {\n          // Parse saved user first\n          const parsedUser = JSON.parse(savedUser);\n          setUser(parsedUser);\n          \n          // Then verify token in background\n          try {\n            const response = await authAPI.getMe();\n            // Update with fresh user data if different\n            if (JSON.stringify(response.data) !== savedUser) {\n              setUser(response.data);\n              localStorage.setItem('user', JSON.stringify(response.data));\n            }\n          } catch (error) {\n            // Token invalid, clear auth\n            console.log('Token validation failed, clearing auth');\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            setUser(null);\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        // Clear potentially corrupted data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setUser(null);\n      }\n      \n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (data: LoginForm) => {\n    try {\n      const response = await authAPI.login(data);\n      const { token, user } = response.data;\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n\n      toast.success('Welcome back!');\n    } catch (error: any) {\n      const message = error.response?.data?.detail || error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterForm) => {\n    try {\n      const response = await authAPI.register(data);\n      const { token, user } = response.data;\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n\n      toast.success('Account created successfully!');\n    } catch (error: any) {\n      const message = error.response?.data?.detail || error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = async (data: Partial<User>) => {\n    try {\n      const response = await authAPI.updateProfile(data);\n      const updatedUser = response.data.user;\n      \n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      toast.success('Profile updated successfully');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Update failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}