{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{MagnifyingGlassIcon,MapPinIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlacesSearch=_ref=>{let{onPlaceSelect,placeholder=\"Search for places...\",className=\"\"}=_ref;const[query,setQuery]=useState('');const[suggestions,setSuggestions]=useState([]);const[isLoading,setIsLoading]=useState(false);const[showSuggestions,setShowSuggestions]=useState(false);const[isGoogleMapsReady,setIsGoogleMapsReady]=useState(false);const inputRef=useRef(null);const serviceRef=useRef();const placesServiceRef=useRef();useEffect(()=>{const checkGoogleMaps=()=>{if(window.google&&window.google.maps&&window.google.maps.places){try{serviceRef.current=new google.maps.places.AutocompleteService();// Create a dummy div for PlacesService\nconst div=document.createElement('div');placesServiceRef.current=new google.maps.places.PlacesService(div);setIsGoogleMapsReady(true);console.log('✅ Google Places API initialized successfully');}catch(error){console.error('❌ Error initializing Google Places API:',error);setIsGoogleMapsReady(false);}}else{console.log('⏳ Waiting for Google Maps to load...');// Retry after a short delay\nsetTimeout(checkGoogleMaps,1000);}};checkGoogleMaps();},[]);const searchPlaces=async searchQuery=>{if(!searchQuery.trim()||!serviceRef.current||!isGoogleMapsReady){console.log('❌ Cannot search: missing query, service, or Google Maps not ready');return;}setIsLoading(true);console.log('🔍 Searching for:',searchQuery);const request={input:searchQuery,types:['establishment','geocode']};try{serviceRef.current.getPlacePredictions(request,(predictions,status)=>{setIsLoading(false);console.log('📍 Places API response:',status,predictions);if(status===google.maps.places.PlacesServiceStatus.OK&&predictions){const places=predictions.map(prediction=>({place_id:prediction.place_id,name:prediction.structured_formatting.main_text,formatted_address:prediction.description}));console.log('✅ Found places:',places);setSuggestions(places);setShowSuggestions(true);}else{console.log('❌ Places search failed:',status);setSuggestions([]);setShowSuggestions(false);}});}catch(error){console.error('❌ Error in places search:',error);setIsLoading(false);setSuggestions([]);setShowSuggestions(false);}};const getPlaceDetails=placeId=>{if(!placesServiceRef.current||!isGoogleMapsReady){console.log('❌ Cannot get place details: service not ready');return;}console.log('📍 Getting details for place:',placeId);const request={placeId:placeId,fields:['place_id','name','formatted_address','geometry','photos','rating','types']};try{placesServiceRef.current.getDetails(request,(place,status)=>{console.log('📍 Place details response:',status,place);if(status===google.maps.places.PlacesServiceStatus.OK&&place){onPlaceSelect(place);}else{console.log('❌ Failed to get place details:',status);}});}catch(error){console.error('❌ Error getting place details:',error);}};const handleInputChange=e=>{const value=e.target.value;setQuery(value);if(value.length>2){searchPlaces(value);}else{setSuggestions([]);setShowSuggestions(false);}};const handleSuggestionClick=place=>{setQuery(place.name);setShowSuggestions(false);getPlaceDetails(place.place_id);};const handleKeyDown=e=>{if(e.key==='Escape'){setShowSuggestions(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"relative \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",children:/*#__PURE__*/_jsx(MagnifyingGlassIcon,{className:\"h-5 w-5 text-gray-400\"})}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:query,onChange:handleInputChange,onKeyDown:handleKeyDown,onFocus:()=>suggestions.length>0&&setShowSuggestions(true),placeholder:isGoogleMapsReady?placeholder:\"Loading Google Maps...\",disabled:!isGoogleMapsReady,className:\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 \".concat(!isGoogleMapsReady?'opacity-50 cursor-not-allowed':'')}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 right-0 pr-3 flex items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"})}),!isGoogleMapsReady&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 right-0 pr-3 flex items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-orange-500\",children:\"Loading...\"})})]}),showSuggestions&&suggestions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none\",children:suggestions.map(place=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>handleSuggestionClick(place),className:\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-blue-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(MapPinIcon,{className:\"h-5 w-5 text-gray-400 mr-3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:place.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:place.formatted_address})]})]})},place.place_id))}),!isGoogleMapsReady&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-xs text-orange-600\",children:\"\\u23F3 Waiting for Google Maps API to load. Check your API key configuration.\"})]});};export default PlacesSearch;","map":{"version":3,"names":["React","useState","useRef","useEffect","MagnifyingGlassIcon","MapPinIcon","jsx","_jsx","jsxs","_jsxs","PlacesSearch","_ref","onPlaceSelect","placeholder","className","query","setQuery","suggestions","setSuggestions","isLoading","setIsLoading","showSuggestions","setShowSuggestions","isGoogleMapsReady","setIsGoogleMapsReady","inputRef","serviceRef","placesServiceRef","checkGoogleMaps","window","google","maps","places","current","AutocompleteService","div","document","createElement","PlacesService","console","log","error","setTimeout","searchPlaces","searchQuery","trim","request","input","types","getPlacePredictions","predictions","status","PlacesServiceStatus","OK","map","prediction","place_id","name","structured_formatting","main_text","formatted_address","description","getPlaceDetails","placeId","fields","getDetails","place","handleInputChange","e","value","target","length","handleSuggestionClick","handleKeyDown","key","concat","children","ref","type","onChange","onKeyDown","onFocus","disabled","onClick"],"sources":["/Users/jeanlee/travel-diary-app/client/src/components/PlacesSearch.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { MagnifyingGlassIcon, MapPinIcon } from '@heroicons/react/24/outline';\n\ninterface Place {\n  place_id: string;\n  name: string;\n  formatted_address: string;\n  geometry?: {\n    location: google.maps.LatLng;\n  };\n  photos?: google.maps.places.PlacePhoto[];\n  rating?: number;\n  types?: string[];\n}\n\ninterface PlacesSearchProps {\n  onPlaceSelect: (place: Place) => void;\n  placeholder?: string;\n  className?: string;\n}\n\nconst PlacesSearch: React.FC<PlacesSearchProps> = ({\n  onPlaceSelect,\n  placeholder = \"Search for places...\",\n  className = \"\"\n}) => {\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState<Place[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isGoogleMapsReady, setIsGoogleMapsReady] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const serviceRef = useRef<google.maps.places.AutocompleteService>();\n  const placesServiceRef = useRef<google.maps.places.PlacesService>();\n\n  useEffect(() => {\n    const checkGoogleMaps = () => {\n      if (window.google && window.google.maps && window.google.maps.places) {\n        try {\n          serviceRef.current = new google.maps.places.AutocompleteService();\n          \n          // Create a dummy div for PlacesService\n          const div = document.createElement('div');\n          placesServiceRef.current = new google.maps.places.PlacesService(div);\n          \n          setIsGoogleMapsReady(true);\n          console.log('✅ Google Places API initialized successfully');\n        } catch (error) {\n          console.error('❌ Error initializing Google Places API:', error);\n          setIsGoogleMapsReady(false);\n        }\n      } else {\n        console.log('⏳ Waiting for Google Maps to load...');\n        // Retry after a short delay\n        setTimeout(checkGoogleMaps, 1000);\n      }\n    };\n\n    checkGoogleMaps();\n  }, []);\n\n  const searchPlaces = async (searchQuery: string) => {\n    if (!searchQuery.trim() || !serviceRef.current || !isGoogleMapsReady) {\n      console.log('❌ Cannot search: missing query, service, or Google Maps not ready');\n      return;\n    }\n\n    setIsLoading(true);\n    console.log('🔍 Searching for:', searchQuery);\n    \n    const request = {\n      input: searchQuery,\n      types: ['establishment', 'geocode'],\n    };\n\n    try {\n      serviceRef.current.getPlacePredictions(request, (predictions, status) => {\n        setIsLoading(false);\n        console.log('📍 Places API response:', status, predictions);\n        \n        if (status === google.maps.places.PlacesServiceStatus.OK && predictions) {\n          const places: Place[] = predictions.map(prediction => ({\n            place_id: prediction.place_id,\n            name: prediction.structured_formatting.main_text,\n            formatted_address: prediction.description,\n          }));\n          \n          console.log('✅ Found places:', places);\n          setSuggestions(places);\n          setShowSuggestions(true);\n        } else {\n          console.log('❌ Places search failed:', status);\n          setSuggestions([]);\n          setShowSuggestions(false);\n        }\n      });\n    } catch (error) {\n      console.error('❌ Error in places search:', error);\n      setIsLoading(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const getPlaceDetails = (placeId: string) => {\n    if (!placesServiceRef.current || !isGoogleMapsReady) {\n      console.log('❌ Cannot get place details: service not ready');\n      return;\n    }\n\n    console.log('📍 Getting details for place:', placeId);\n\n    const request = {\n      placeId: placeId,\n      fields: ['place_id', 'name', 'formatted_address', 'geometry', 'photos', 'rating', 'types']\n    };\n\n    try {\n      placesServiceRef.current.getDetails(request, (place, status) => {\n        console.log('📍 Place details response:', status, place);\n        \n        if (status === google.maps.places.PlacesServiceStatus.OK && place) {\n          onPlaceSelect(place as Place);\n        } else {\n          console.log('❌ Failed to get place details:', status);\n        }\n      });\n    } catch (error) {\n      console.error('❌ Error getting place details:', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setQuery(value);\n    \n    if (value.length > 2) {\n      searchPlaces(value);\n    } else {\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSuggestionClick = (place: Place) => {\n    setQuery(place.name);\n    setShowSuggestions(false);\n    getPlaceDetails(place.place_id);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          onFocus={() => suggestions.length > 0 && setShowSuggestions(true)}\n          placeholder={isGoogleMapsReady ? placeholder : \"Loading Google Maps...\"}\n          disabled={!isGoogleMapsReady}\n          className={`block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 ${\n            !isGoogleMapsReady ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        />\n        {isLoading && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"></div>\n          </div>\n        )}\n        {!isGoogleMapsReady && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            <div className=\"text-xs text-orange-500\">Loading...</div>\n          </div>\n        )}\n      </div>\n\n      {showSuggestions && suggestions.length > 0 && (\n        <div className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none\">\n          {suggestions.map((place) => (\n            <div\n              key={place.place_id}\n              onClick={() => handleSuggestionClick(place)}\n              className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-blue-50\"\n            >\n              <div className=\"flex items-center\">\n                <MapPinIcon className=\"h-5 w-5 text-gray-400 mr-3\" />\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-gray-900\">{place.name}</div>\n                  <div className=\"text-sm text-gray-500\">{place.formatted_address}</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!isGoogleMapsReady && (\n        <div className=\"mt-2 text-xs text-orange-600\">\n          ⏳ Waiting for Google Maps API to load. Check your API key configuration.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlacesSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}