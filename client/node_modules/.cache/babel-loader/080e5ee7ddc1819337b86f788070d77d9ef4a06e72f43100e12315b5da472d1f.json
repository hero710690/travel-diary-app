{"ast":null,"code":"import _objectSpread from\"/Users/jeanlee/travel-diary-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState}from'react';import{Wrapper,Status}from'@googlemaps/react-wrapper';import{jsx as _jsx}from\"react/jsx-runtime\";const MapComponent=_ref=>{let{center,zoom,onPlaceSelect,markers=[],className=\"w-full h-96\"}=_ref;const ref=useRef(null);const[map,setMap]=useState();const[service,setService]=useState();useEffect(()=>{if(ref.current&&!map){const newMap=new window.google.maps.Map(ref.current,{center,zoom,mapTypeControl:true,streetViewControl:true,fullscreenControl:true});setMap(newMap);// Initialize Places Service\nconst placesService=new google.maps.places.PlacesService(newMap);setService(placesService);// Add click listener for place selection\nif(onPlaceSelect){newMap.addListener('click',event=>{if(event.latLng){// Reverse geocoding to get place details\nconst geocoder=new google.maps.Geocoder();geocoder.geocode({location:event.latLng},(results,status)=>{if(status==='OK'&&results&&results[0]){const place={place_id:results[0].place_id,name:results[0].formatted_address,formatted_address:results[0].formatted_address,geometry:{location:event.latLng}};onPlaceSelect(place);}});}});}}},[ref,map,center,zoom,onPlaceSelect]);// Update map center when center prop changes\nuseEffect(()=>{if(map&&center){console.log('🗺️ Updating map center to:',center);map.setCenter(center);map.setZoom(zoom);}},[map,center,zoom]);// Update markers when they change\nuseEffect(()=>{if(map){// Clear existing markers (you might want to store them in state to manage them better)\nmarkers.forEach(markerData=>{new google.maps.Marker({position:markerData.position,map:map,title:markerData.title});});}},[map,markers]);return/*#__PURE__*/_jsx(\"div\",{ref:ref,className:className});};const GoogleMap=props=>{const render=status=>{switch(status){case Status.LOADING:return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-96 bg-gray-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:\"Loading map...\"})});case Status.FAILURE:return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-96 bg-red-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500\",children:\"Error loading map\"})});case Status.SUCCESS:return/*#__PURE__*/_jsx(MapComponent,_objectSpread({},props));}};return/*#__PURE__*/_jsx(Wrapper,{apiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY||'',render:render,libraries:['places','geometry']});};export default GoogleMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","Wrapper","Status","jsx","_jsx","MapComponent","_ref","center","zoom","onPlaceSelect","markers","className","ref","map","setMap","service","setService","current","newMap","window","google","maps","Map","mapTypeControl","streetViewControl","fullscreenControl","placesService","places","PlacesService","addListener","event","latLng","geocoder","Geocoder","geocode","location","results","status","place","place_id","name","formatted_address","geometry","console","log","setCenter","setZoom","forEach","markerData","Marker","position","title","GoogleMap","props","render","LOADING","children","FAILURE","SUCCESS","_objectSpread","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries"],"sources":["/Users/jeanlee/travel-diary-app/client/src/components/GoogleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\n\ninterface MapProps {\n  center: google.maps.LatLngLiteral;\n  zoom: number;\n  onPlaceSelect?: (place: google.maps.places.PlaceResult) => void;\n  markers?: Array<{\n    position: google.maps.LatLngLiteral;\n    title: string;\n    id: string;\n  }>;\n  className?: string;\n}\n\nconst MapComponent: React.FC<MapProps> = ({ \n  center, \n  zoom, \n  onPlaceSelect, \n  markers = [],\n  className = \"w-full h-96\"\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<google.maps.Map>();\n  const [service, setService] = useState<google.maps.places.PlacesService>();\n\n  useEffect(() => {\n    if (ref.current && !map) {\n      const newMap = new window.google.maps.Map(ref.current, {\n        center,\n        zoom,\n        mapTypeControl: true,\n        streetViewControl: true,\n        fullscreenControl: true,\n      });\n      \n      setMap(newMap);\n      \n      // Initialize Places Service\n      const placesService = new google.maps.places.PlacesService(newMap);\n      setService(placesService);\n\n      // Add click listener for place selection\n      if (onPlaceSelect) {\n        newMap.addListener('click', (event: google.maps.MapMouseEvent) => {\n          if (event.latLng) {\n            // Reverse geocoding to get place details\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode(\n              { location: event.latLng },\n              (results, status) => {\n                if (status === 'OK' && results && results[0]) {\n                  const place: google.maps.places.PlaceResult = {\n                    place_id: results[0].place_id,\n                    name: results[0].formatted_address,\n                    formatted_address: results[0].formatted_address,\n                    geometry: {\n                      location: event.latLng!,\n                    },\n                  };\n                  onPlaceSelect(place);\n                }\n              }\n            );\n          }\n        });\n      }\n    }\n  }, [ref, map, center, zoom, onPlaceSelect]);\n\n  // Update map center when center prop changes\n  useEffect(() => {\n    if (map && center) {\n      console.log('🗺️ Updating map center to:', center);\n      map.setCenter(center);\n      map.setZoom(zoom);\n    }\n  }, [map, center, zoom]);\n\n  // Update markers when they change\n  useEffect(() => {\n    if (map) {\n      // Clear existing markers (you might want to store them in state to manage them better)\n      markers.forEach((markerData) => {\n        new google.maps.Marker({\n          position: markerData.position,\n          map: map,\n          title: markerData.title,\n        });\n      });\n    }\n  }, [map, markers]);\n\n  return <div ref={ref} className={className} />;\n};\n\nconst GoogleMap: React.FC<MapProps> = (props) => {\n  const render = (status: Status) => {\n    switch (status) {\n      case Status.LOADING:\n        return (\n          <div className=\"flex items-center justify-center h-96 bg-gray-100\">\n            <div className=\"text-gray-500\">Loading map...</div>\n          </div>\n        );\n      case Status.FAILURE:\n        return (\n          <div className=\"flex items-center justify-center h-96 bg-red-50\">\n            <div className=\"text-red-500\">Error loading map</div>\n          </div>\n        );\n      case Status.SUCCESS:\n        return <MapComponent {...props} />;\n    }\n  };\n\n  return (\n    <Wrapper \n      apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''} \n      render={render}\n      libraries={['places', 'geometry']}\n    />\n  );\n};\n\nexport default GoogleMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}